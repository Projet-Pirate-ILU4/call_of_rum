/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package fr.call_of_rum.boundary.presentation;

import fr.call_of_rum.util.CellType;
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;

/**
 *
 * @author Sol√®ne
 */
public class CellPanel extends javax.swing.JPanel {

    private CellType cellType;
    /**
     * Creates new form CellPanel
     */
    public CellPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numLabel = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setMinimumSize(new java.awt.Dimension(100, 100));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(100, 100));
        setLayout(null);

        numLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        numLabel.setForeground(new java.awt.Color(255, 255, 255));
        numLabel.setText("1");
        numLabel.setAlignmentX(1.0F);
        numLabel.setAlignmentY(0.0F);
        add(numLabel);
        numLabel.setBounds(70, 10, 20, 20);

        imageLabel.setAlignmentY(0.0F);
        imageLabel.setMaximumSize(new java.awt.Dimension(100, 100));
        imageLabel.setMinimumSize(new java.awt.Dimension(100, 100));
        imageLabel.setPreferredSize(new java.awt.Dimension(100, 100));
        add(imageLabel);
        imageLabel.setBounds(0, 0, 100, 100);
    }// </editor-fold>//GEN-END:initComponents

    public void setNum(int num){
        numLabel.setText(String.valueOf(num));
    }
    
    public void setType(CellType type){
        cellType=type;
        putImage();
    }
    // TODO change images
    public void putImage(){
        BufferedImage typeImage = ImageLoader.loadImage("presentation/cell/"+cellType.toString().toLowerCase()+".png");
        Image scaledTypeImage;
        if (cellType.toString().toLowerCase().equals("shortcut")){
            scaledTypeImage = typeImage.getScaledInstance(50, 50, Image.SCALE_SMOOTH);
            imageLabel.setLocation(20, 10);
        }else{
            scaledTypeImage = typeImage.getScaledInstance(60, 60, Image.SCALE_SMOOTH);
            imageLabel.setLocation(20, 10);
        }
        ImageIcon typeIcon = new ImageIcon(scaledTypeImage);
        imageLabel.setIcon(typeIcon);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel numLabel;
    // End of variables declaration//GEN-END:variables
}
