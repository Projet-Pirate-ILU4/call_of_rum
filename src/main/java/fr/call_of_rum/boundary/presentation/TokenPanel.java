/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package fr.call_of_rum.boundary.presentation;

import fr.call_of_rum.util.Player;
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;

/**
 *
 * @author Solène
 */
public class TokenPanel extends javax.swing.JPanel {

    private BoardPanel boardPanel;
    private Player player;
    private int posX;
    private int posY;
    private boolean isMovable=false;
    
    public void setBoardPanel(BoardPanel boardPanel) {
        this.boardPanel = boardPanel;
    }
    public void setPlayer(Player player) {
        this.player = player;
        putImageToken();
    }
    /**
     * Creates new form PiecePanel
     */
    public TokenPanel() {
        initComponents();
    }
    
    public void putImageToken(){
        BufferedImage typeImage = ImageLoader.loadImage("presentation/"+player+".png");
        Image scaledTypeImage;
        scaledTypeImage = typeImage.getScaledInstance(70, 70, Image.SCALE_SMOOTH);
        ImageIcon typeIcon = new ImageIcon(scaledTypeImage);
        tokenLabel.setIcon(typeIcon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tokenLabel = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(70, 70));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(70, 70));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        setLayout(null);

        tokenLabel.setMinimumSize(new java.awt.Dimension(70, 70));
        tokenLabel.setPreferredSize(new java.awt.Dimension(70, 70));
        add(tokenLabel);
        tokenLabel.setBounds(0, 0, 70, 70);
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        System.out.println(boardPanel.getisToken1Movable());
        if (player.equals(Player.BILL_JAMBE_DE_BOIS) && boardPanel.getisToken1Movable()){
            System.out.println("On a cliqué sur le pion 1");
            //boardPanel.setToken1AsClicked();
            posX=evt.getX();
            posY=evt.getY();
            isMovable=true;
        }
        if (player.equals(Player.JACK_LE_BORGNE) && boardPanel.getisToken2Movable()){
            System.out.println("On a cliqué sur le pion 2");
            //boardPanel.setToken2AsClicked();
            posX=evt.getX();
            posY=evt.getY();
            isMovable=true;
        }
        /*System.out.println("boardPanel.getX() "+boardPanel.getX()+" boardPanel.getY() "+boardPanel.getY());
        System.out.println("boardPanel.getX()+boardPanel.getWidth "+(boardPanel.getX()+boardPanel.getWidth())+" boardPanel.getY()+boardänel.getHeight "+(boardPanel.getY()+boardPanel.getHeight()));
        */
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        if (isMovable){    
            int depX = evt.getX() - posX;
            int depY = evt.getY() - posY;
            int newX=getX()+depX;
            int newY=getY()+depY;
            /*System.out.println("newX>boardPanel.getX()+boardPanel.getWidth()"+(newX>boardPanel.getX()+boardPanel.getWidth()));
            System.out.println("(newX<boardPanel.getX())"+(newX<boardPanel.getX()));
            System.out.println("(newY<boardPanel.getY())"+(newY<boardPanel.getY()));
            System.out.println("(newY>boardPanel.getY()+boardPanel.getHeight())"+(newY>boardPanel.getY()+boardPanel.getHeight()));
            */            
            if ((newX>boardPanel.getX()+boardPanel.getWidth()) 
                    ||(newX<boardPanel.getX()) 
                    //||(newY<boardPanel.getY())
                      ||(newY>boardPanel.getY()+boardPanel.getHeight())){
                this.setLocation(posX, posY);       
            }else{
                this.setLocation(getX()+depX, getY()+depY);
            }
            repaint();
        }
    }//GEN-LAST:event_formMouseDragged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel tokenLabel;
    // End of variables declaration//GEN-END:variables
}
