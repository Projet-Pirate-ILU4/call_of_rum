/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package fr.call_of_rum.boundary.presentation;

import java.awt.Color;
import java.util.Optional;

import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

import com.formdev.flatlaf.FlatLightLaf;

import fr.call_of_rum.boundary.dialog.DialogStub;
import fr.call_of_rum.boundary.dialog.IDialog;
import fr.call_of_rum.util.ItemType;
import fr.call_of_rum.util.Player;

/**
 *
 * @author loferga
 */
public class GameFrame extends Presentation {
	
	private IDialog dialog;
    private Player player1 = Player.BILL_JAMBE_DE_BOIS;

    private Player player2 = Player.JACK_LE_BORGNE;


    /**
     * Creates new form GameFrame
     * @param dialog
     */
    public GameFrame(IDialog dialog) {
    	this.dialog = dialog;
    	try {
			UIManager.setLookAndFeel(new FlatLightLaf());
		} catch (UnsupportedLookAndFeelException e) {
			e.printStackTrace();
		}
        initComponents();
        player1 = dialog.getPlayer1();
        player2 = dialog.getPlayer2();
        playerPanel2.setDialog(dialog);
        playerPanel1.setDialog(dialog);
        dicePanel1.setDialog(dialog);
        playerPanel1.setPlayer(player1);
        playerPanel2.setPlayer(player2);
        getContentPane().setBackground(Color.WHITE);
        playerPanel2.update();
        playerPanel1.update();
        endTurnSecondPlayerActionPerformed(null);
        endTurnFirstPlayer.setEnabled(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        rightPanel = new javax.swing.JPanel();
        endTurnSecondPlayer = new javax.swing.JButton();
        playerPanel2 = new fr.call_of_rum.boundary.presentation.PlayerPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        leftPanel = new javax.swing.JPanel();
        endTurnFirstPlayer = new javax.swing.JButton();
        playerPanel1 = new fr.call_of_rum.boundary.presentation.PlayerPanel();
        centerPanel = new javax.swing.JPanel();
        boardPanel = new fr.call_of_rum.boundary.presentation.BoardPanel();
        boardPanel.initBoard(dialog);
        boardPanel.setCellsType(dialog.getCellsType());
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionArea = new javax.swing.JTextArea();
        dicePanel1 = new fr.call_of_rum.boundary.presentation.DicePanel();
        marketLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1330, 853));

        endTurnSecondPlayer.setText("End Turn");
        endTurnSecondPlayer.setEnabled(false);
        endTurnSecondPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endTurnSecondPlayerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(playerPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(endTurnSecondPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(endTurnSecondPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        jSplitPane1.setRightComponent(rightPanel);

        endTurnFirstPlayer.setText("End Turn");
        endTurnFirstPlayer.setEnabled(false);
        endTurnFirstPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endTurnFirstPlayerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(playerPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(endTurnFirstPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(endTurnFirstPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        jSplitPane2.setLeftComponent(leftPanel);

        descriptionArea.setColumns(20);
        descriptionArea.setRows(5);
        jScrollPane1.setViewportView(descriptionArea);

        marketLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/market.png"))); // NOI18N
        marketLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                marketLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout centerPanelLayout = new javax.swing.GroupLayout(centerPanel);
        centerPanel.setLayout(centerPanelLayout);
        centerPanelLayout.setHorizontalGroup(
            centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centerPanelLayout.createSequentialGroup()
                        .addComponent(marketLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dicePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171))
                    .addGroup(centerPanelLayout.createSequentialGroup()
                        .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(boardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        centerPanelLayout.setVerticalGroup(
            centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(centerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dicePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(marketLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jSplitPane2.setRightComponent(centerPanel);

        jSplitPane1.setLeftComponent(jSplitPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void endTurnFirstPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endTurnFirstPlayerActionPerformed
        synchronized (this) {
            dialog.endTurn();
            this.notifyAll();
        }
        enableSecondPlayer();
        endTurnFirstPlayer.setEnabled(true);
        playerPanel2.setBorder(BorderFactory.createLineBorder(Color.red));
        boardPanel.setToken1Movable(false);
        boardPanel.setToken2Movable(true);
    }//GEN-LAST:event_endTurnFirstPlayerActionPerformed

    private void endTurnSecondPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endTurnSecondPlayerActionPerformed
        synchronized (this) {
            dialog.endTurn();
            this.notifyAll();
        }
        enableFirstPlayer();
        endTurnSecondPlayer.setEnabled(false);
        boardPanel.setToken1Movable(true);
        playerPanel1.setBorder(BorderFactory.createLineBorder(Color.blue));
        boardPanel.setToken2Movable(false);
    }//GEN-LAST:event_endTurnSecondPlayerActionPerformed

    private void marketLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_marketLabelMouseClicked
        java.awt.EventQueue.invokeLater(() -> new Market(this,true, Player.JACK_LE_BORGNE, dialog).setVisible(true));
    }//GEN-LAST:event_marketLabelMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
    	
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GameFrame(new DialogStub()).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private fr.call_of_rum.boundary.presentation.BoardPanel boardPanel;
    private javax.swing.JPanel centerPanel;
    private javax.swing.JTextArea descriptionArea;
    private fr.call_of_rum.boundary.presentation.DicePanel dicePanel1;
    private javax.swing.JButton endTurnFirstPlayer;
    private javax.swing.JButton endTurnSecondPlayer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JLabel marketLabel;
    private fr.call_of_rum.boundary.presentation.PlayerPanel playerPanel1;
    private fr.call_of_rum.boundary.presentation.PlayerPanel playerPanel2;
    private javax.swing.JPanel rightPanel;
    // End of variables declaration//GEN-END:variables
    
    @Override
    public void enableFirstPlayer() {
        playerPanel2.setBorder(BorderFactory.createLineBorder(null));
        endTurnFirstPlayer.setEnabled(true);
        boardPanel.setToken1Movable(true);
        boardPanel.setToken2Movable(false);
    }

    @Override
    public void enableSecondPlayer() {
        playerPanel1.setBorder(BorderFactory.createLineBorder(null));
    	endTurnSecondPlayer.setEnabled(true);
        boardPanel.setToken1Movable(false);
        boardPanel.setToken2Movable(true);
    }

	@Override
	public boolean chestFound(int coinAmount, ItemType itemType) {
		ChestDialog chestDialog = new ChestDialog(this, itemType, coinAmount);
		int returnStatus = chestDialog.getReturnStatus();
		return returnStatus == ChestDialog.RET_OK;
	}

	@Override
	public boolean openedChestFound(int coinAmount, Optional<ItemType> optionalItemType) {
		if (optionalItemType.isEmpty()) {
			JOptionPane.showMessageDialog(this, "il n'y a rien dans le coffre");
			return false;
		}
		else {
			ChestDialog chestDialog = new ChestDialog(this, optionalItemType.get(), coinAmount);
			int returnStatus = chestDialog.getReturnStatus();
			return returnStatus == ChestDialog.RET_OK;
		}
	}

	@Override
	public void showExplosion() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void showShortcut() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void showDuel(Player player) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void printMessage(String message) {
		descriptionArea.append(message + "\n");
	}

	@Override
	public void updateScores() {
		playerPanel2.updateScore();
		playerPanel1.updateScore();
	}

	@Override
	public void clearMessages() {
		descriptionArea.setText("");
	}

	@Override
	public void notifyDrop(ItemType itemType) {
		boardPanel.notifyDrop(itemType);
	}

	@Override
	public void notifyPickUp(ItemType itemType) {
		PlayerPanel playerPanel = endTurnFirstPlayer.isEnabled() ? playerPanel2 : playerPanel1;
		playerPanel.notifyPickUp(itemType);
	}
	
}
